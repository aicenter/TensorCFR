#!/usr/bin/env python3

from src.algorithms.tensorcfr_best_response.TensorCFR_BestResponse import TensorCFR_BestResponse
from src.commons.constants import PLAYER1, PLAYER2
from src.domains.available_domains import get_domain_by_name

TOTAL_STEPS = 10


def exploitability_IIGS3_td4():   # TODO extract class
	# domain_ = get_domain_by_name("flattened_hunger_games")
	# domain_ = get_domain_by_name("flattened_hunger_games_2")
	# domain_ = get_domain_by_name("flattened_domain01_via_gambit")
	# domain_ = get_domain_by_name("II-GS2_gambit_flattened")
	domain_ = get_domain_by_name("II-GS3_gambit_flattened")
	# domain_ = get_domain_by_name("IIGS5_gambit_flattened")
	# domain_ = get_domain_by_name("IIGS6_gambit_flattened")
	trunk_strategies_gs3_td4 = [
		[  # infoset strategies at level 0
			[1.]
		],

		[  # infoset strategies at level 1
			[0.1, 0.9, 0.]
		],

		[  # infoset strategies at level 2
			[0.69, 0.01, 0.3]
		],

		[  # infoset strategies at level 3
			[1.],
			[1.],
			[1.],
			[1.],
			[1.],
			[1.],
			[1.],
			[1.],
			[1.]
		]
	]
	best_response_values_of_player1 = TensorCFR_BestResponse(
		best_responder=PLAYER1,
		trunk_strategies=trunk_strategies_gs3_td4,
		domain=domain_,
		trunk_depth=4
	)
	best_response_values_of_player2 = TensorCFR_BestResponse(
		best_responder=PLAYER2,
		trunk_strategies=trunk_strategies_gs3_td4,
		domain=domain_,
		trunk_depth=4
	)
	best_response_values_of_player1.cfr_strategies_after_fixed_trunk(
		total_steps=TOTAL_STEPS,
		delay=1,
	)
	best_response_values_of_player2.cfr_strategies_after_fixed_trunk(
		total_steps=TOTAL_STEPS,
		delay=1,
	)

	exploitabilities = [
		(u1 + u2) / 2
		for (u1, u2)
		in zip(best_response_values_of_player1.best_response_values, best_response_values_of_player2.best_response_values)
	]
	print("best_response_values_of_player1: {}".format(best_response_values_of_player1.best_response_values))
	print("best_response_values_of_player2: {}".format(best_response_values_of_player2.best_response_values))
	print("exploitabilities: {}".format(exploitabilities))


if __name__ == '__main__':    # TODO test on MP
	exploitability_IIGS3_td4()
